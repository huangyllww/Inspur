/* $NoKeywords:$ */

/**
 * @file
 *
 * HpcbCommon.h
 *
 * HGPI PSP Customization Block common definitions
 *
 * @xrefitem bom "File Content Label" "Release Content"
 * @e project: HGPI
 * @e sub-project: (Mem)
 *
 **/
/*****************************************************************************
*
 *
 * Copyright 2016 - 2023 CHENGDU HAIGUANG IC DESIGN CO., LTD. All Rights Reserved.
 *
 * HYGON is granting you permission to use this software (the Materials)
 * pursuant to the terms and conditions of your Software License Agreement
 * with HYGON.  This header does *NOT* give you permission to use the Materials
 * or any rights under HYGON's intellectual property.  Your use of any portion
 * of these Materials shall constitute your acceptance of those terms and
 * conditions.  If you do not agree to the terms and conditions of the Software
 * License Agreement, please do not use any portion of these Materials.
 *
 * CONFIDENTIALITY:  The Materials and all other information, identified as
 * confidential and provided to you by HYGON shall be kept confidential in
 * accordance with the terms and conditions of the Software License Agreement.
 *
 * LIMITATION OF LIABILITY: THE MATERIALS AND ANY OTHER RELATED INFORMATION
 * PROVIDED TO YOU BY HYGON ARE PROVIDED "AS IS" WITHOUT ANY EXPRESS OR IMPLIED
 * WARRANTY OF ANY KIND, INCLUDING BUT NOT LIMITED TO WARRANTIES OF
 * MERCHANTABILITY, NONINFRINGEMENT, TITLE, FITNESS FOR ANY PARTICULAR PURPOSE,
 * OR WARRANTIES ARISING FROM CONDUCT, COURSE OF DEALING, OR USAGE OF TRADE.
 * IN NO EVENT SHALL HYGON OR ITS LICENSORS BE LIABLE FOR ANY DAMAGES WHATSOEVER
 * (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF PROFITS, BUSINESS
 * INTERRUPTION, OR LOSS OF INFORMATION) ARISING OUT OF HYGON'S NEGLIGENCE,
 * GROSS NEGLIGENCE, THE USE OF OR INABILITY TO USE THE MATERIALS OR ANY OTHER
 * RELATED INFORMATION PROVIDED TO YOU BY HYGON, EVEN IF HYGON HAS BEEN ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGES.  BECAUSE SOME JURISDICTIONS PROHIBIT THE
 * EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES,
 * THE ABOVE LIMITATION MAY NOT APPLY TO YOU.
 *
 * HYGON does not assume any responsibility for any errors which may appear in
 * the Materials or any other related information provided to you by HYGON, or
 * result from use of the Materials or any related information.
 *
 * You agree that you will not reverse engineer or decompile the Materials.
 *
 * NO SUPPORT OBLIGATION: HYGON is not obligated to furnish, support, or make any
 * further information, software, technical information, know-how, or show-how
 * available to you.  Additionally, HYGON retains the right to modify the
 * Materials at any time, without notice, and is not obligated to provide such
 * modified Materials to you.
 *
 *
* ***************************************************************************
*
*/

#ifndef _HPCB_COMMON_H_
#define _HPCB_COMMON_H_

typedef enum {
  HPCB_ID_CONFIG_CCX_MIN_CSV_ASID,
  HPCB_ID_CONFIG_DF_HMI_ENCRYPT,
  HPCB_ID_CONFIG_DF_XHMI_ENCRYPT,
  HPCB_ID_CONFIG_DF_SAVE_RESTORE_MEM_ENCRYPT,
  HPCB_ID_CONFIG_DF_SYS_STORAGE_AT_TOP_OF_MEM,
  HPCB_ID_CONFIG_DF_PROBE_FILTER_ENABLE,
  HPCB_ID_CONFIG_DF_BOTTOMIO,
  HPCB_ID_CONFIG_DF_MEM_INTERLEAVING,
  HPCB_ID_CONFIG_DF_DRAM_INTERLEAVE_SIZE,
  HPCB_ID_CONFIG_DF_ENABLE_CHAN_INTLV_HASH,
  HPCB_ID_CONFIG_DF_PCI_MMIO_SIZE,
  HPCB_ID_CONFIG_DF_CAKE_CRC_THRESH_PERF_BOUNDS,
  HPCB_ID_CONFIG_DF_MEM_CLEAR,
  HPCB_ID_CONFIG_DF_PCI_BUS_ASSIGN_NUMBER,
  HPCB_ID_CONFIG_MEMHOLEREMAPPING,
  HPCB_ID_CONFIG_LIMITMEMORYTOBELOW1TB,
  HPCB_ID_CONFIG_USERTIMINGMODE,
  HPCB_ID_CONFIG_MEMCLOCKVALUE,
  HPCB_ID_CONFIG_ENABLECHIPSELECTINTLV,
  HPCB_ID_CONFIG_ENABLEECCFEATURE,
  HPCB_ID_CONFIG_ENABLEPOWERDOWN,
  HPCB_ID_CONFIG_ENABLEPARITY,
  HPCB_ID_CONFIG_ENABLEBANKSWIZZLE,
  HPCB_ID_CONFIG_ENABLEMEMCLR,
  HPCB_ID_CONFIG_UMAMODE,
  HPCB_ID_CONFIG_UMASIZE,
  HPCB_ID_CONFIG_MEMRESTORECTL,
  HPCB_ID_CONFIG_SAVEMEMCONTEXTCTL,
  HPCB_ID_CONFIG_ISCAPSULEMODE,
  HPCB_ID_CONFIG_FORCETRAINMODE,
  HPCB_ID_CONFIG_DIMMTYPEUSEDINMIXEDCONFIG,
  HPCB_ID_CONFIG_AMPENABLE,
  HPCB_ID_CONFIG_DRAMDOUBLEREFRESHRATE,
  HPCB_ID_CONFIG_PMUTRAINMODE,
  HPCB_ID_CONFIG_ECCREDIRECTION,
  HPCB_ID_CONFIG_SCRUBDRAMRATE,
  HPCB_ID_CONFIG_SCRUBL2RATE,
  HPCB_ID_CONFIG_SCRUBL3RATE,
  HPCB_ID_CONFIG_SCRUBICRATE,
  HPCB_ID_CONFIG_SCRUBDCRATE,
  HPCB_ID_CONFIG_ECCSYNCFLOOD,
  HPCB_ID_CONFIG_ECCSYMBOLSIZE,
  HPCB_ID_CONFIG_DQSTRAININGCONTROL,
  HPCB_ID_CONFIG_UMAABOVE4G,
  HPCB_ID_CONFIG_UMAALIGNMENT,
  HPCB_ID_CONFIG_MEMORYALLCLOCKSON,
  HPCB_ID_CONFIG_MEMORYBUSFREQUENCYLIMIT,
  HPCB_ID_CONFIG_POWERDOWNMODE,
  HPCB_ID_CONFIG_IGNORESPDCHECKSUM,
  HPCB_ID_CONFIG_MEMORYMODEUNGANGED,
  HPCB_ID_CONFIG_MEMORYQUADRANKCAPABLE,
  HPCB_ID_CONFIG_MEMORYRDIMMCAPABLE,
  HPCB_ID_CONFIG_MEMORYLRDIMMCAPABLE,
  HPCB_ID_CONFIG_MEMORYUDIMMCAPABLE,
  HPCB_ID_CONFIG_MEMORYSODIMMCAPABLE,
  HPCB_ID_CONFIG_DRAMDOUBLEREFRESHRATEEN,
  HPCB_ID_CONFIG_DIMMTYPEDDDR5CAPABLE,
  //HPCB_ID_CONFIG_DIMMTYPEDDDR4CAPABLE,
  HPCB_ID_CONFIG_ENABLEZQRESET,
  HPCB_ID_CONFIG_ENABLEBANKGROUPSWAP,
  HPCB_ID_CONFIG_ODTSCMDTHROTEN,
  HPCB_ID_CONFIG_SWCMDTHROTEN,
  HPCB_ID_CONFIG_FORCEPWRDOWNTHROTEN,
  HPCB_ID_CONFIG_ODTSCMDTHROTCYC,
  HPCB_ID_CONFIG_SWCMDTHROTCYC,
  HPCB_ID_CONFIG_DIMMSENSORCONF,
  HPCB_ID_CONFIG_DIMMSENSORUPPER,
  HPCB_ID_CONFIG_DIMMSENSORLOWER,
  HPCB_ID_CONFIG_DIMMSENSORCRITICAL,
  HPCB_ID_CONFIG_DIMMSENSORRESOLUTION,
  HPCB_ID_CONFIG_AUTOREFFINEGRANMODE,
  HPCB_ID_CONFIG_ENABLEMEMPSTATE,
  HPCB_ID_CONFIG_SOLDERDOWNDRAM,
  HPCB_ID_CONFIG_DDRROUTEBALANCEDTEE,
  HPCB_ID_CONFIG_MEM_MBIST_TEST_ENABLE,
  HPCB_ID_CONFIG_MEM_MBIST_SUBTEST_TYPE,
  HPCB_ID_CONFIG_MEM_MBIST_TESTMODE,
  HPCB_ID_CONFIG_MEM_MBIST_AGGRESOR_ON,
  HPCB_ID_CONFIG_MEM_MBIST_HALT_ON_ERROR,
  HPCB_ID_CONFIG_MEM_CPU_VREF_RANGE,
  HPCB_ID_CONFIG_MEM_DRAM_VREF_RANGE,
  HPCB_ID_CONFIG_MEM_TSME_ENABLE,
  HPCB_ID_CONFIG_MEM_NVDIMM_POWER_SOURCE,
  HPCB_ID_CONFIG_MEM_DATA_POISON,
  HPCB_ID_CONFIG_MEM_DATA_SCRAMBLE,
  HPCB_ID_CONFIG_BMC_SOCKET_NUMBER,
  HPCB_ID_CONFIG_BMC_START_LANE,
  HPCB_ID_CONFIG_BMC_END_LANE,
  HPCB_ID_CONFIG_BMC_DEVICE,
  HPCB_ID_CONFIG_BMC_FUNCTION,
  HPCB_ID_CONFIG_FCH_CONSOLE_OUT_ENABLE,
  HPCB_ID_CONFIG_FCH_CONSOLE_OUT_SERIAL_PORT
} HPCB_COMMON_CONFIG_ID;

typedef enum {
  HPCB_ID_CBS_DF_CMN_HMI_ENCRYPTION,
  HPCB_ID_CBS_DF_CMN_X_HMI_ENCRYPTION,
  HPCB_ID_CBS_DF_CMN_CC6_MEM_ENCRYPTION,
  HPCB_ID_CBS_DF_CMN_CC6_ALLOCATION_SCHEME,
  HPCB_ID_CBS_DF_CMN_SYS_PROBE_FILTER,
  HPCB_ID_CBS_DF_CMN_MEM_INTLV,
  HPCB_ID_CBS_DF_CMN_MEM_INTLV_SIZE,
  HPCB_ID_CBS_DF_CMN_CHNL_INTLV_HASH,
  HPCB_ID_CBS_CMN_MEM_MAPPING_BANK_INTERLEAVE_DDR5,
  HPCB_ID_CBS_CMN_MEM_CTRLLER_BANK_GROUP_SWAP_DDR5,
  HPCB_ID_CBS_CMN_MEM_CTRLLER_BANK_SWIZZLE_DDR5,
  HPCB_ID_CBS_CMN_MEM_ADDRESS_HASHING_DDR5,
  HPCB_ID_CBS_CMN_MEM_SPEED_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TCL_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRCDRD_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRCDWR_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRP_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRAS_DDR5,
  HPCB_ID_CBS_CMN_MEM_DATA_POISONING_DDR5,
  HPCB_ID_CBS_CMN_MEM_ADDRESS_HASH_BANK_DDR5,
  HPCB_ID_CBS_CMN_MEM_ADDRESS_HASH_CS_DDR5,
  HPCB_ID_CBS_CMN_MEM_TSME_DDR5,
  HPCB_ID_CBS_CMN_MEM_OVERCLOCK_DDR5,
  HPCB_ID_CBS_CMN_GNB_GFX_UMA_MODE,
  HPCB_ID_CBS_CMN_GNB_GFX_UMA_VERSION,
  HPCB_ID_CBS_CMN_GNB_GFX_DISPLAY_RESOLUTION,
  HPCB_ID_CBS_CMN_GNB_GFX_UMA_FRAME_BUFFER_SIZE,
  HPCB_ID_CBS_CMN_CPU_CSV_ASID_SPACE_LIMIT,
  HPCB_ID_CBS_CMN_MEM_SPD_READ_OPTIMIZATION_DDR5,
  HPCB_ID_CBS_CMN_MEM_MBIST_EN,
  HPCB_ID_CBS_CMN_MEM_MBIST_TESTMODE,
  HPCB_ID_CBS_DF_CMN_MEM_CLEAR,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRC_CTRL_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRC_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRRD_S_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRRD_L_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TFAW_CTRL_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TFAW_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TWTR_S_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TWTR_L_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TWR_CTRL_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TWR_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRCPAGE_CTRL_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRCPAGE_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRDRD_SC_L_CTRL_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRDRD_SC_L_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TWRWR_SC_L_CTRL_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TWRWR_SC_L_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRFC_CTRL_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRFC_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRFC2_CTRL_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRFC2_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRFC4_CTRL_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRFC4_DDR5,
  HPCB_ID_CBS_CMN_MEM_OVERCLOCK_FAIL_CNT,
  HPCB_ID_CBS_CMN_MEM_CTRLLER_PROC_ODT_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRDRD_SC_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRDRD_SD_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRDRD_DD_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TWRWR_SC_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TWRWR_SD_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TWRWR_DD_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRDWR_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TWRRD_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TRTP_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TCWL_DDR5,
  HPCB_ID_CBS_CMN_MEM_DATA_BUS_CONFIG_CTL_DDR5,
  HPCB_ID_CBS_CMN_MEM_CTRLLER_RTT_NOM_DDR5,
  HPCB_ID_CBS_CMN_MEM_CTRLLER_RTT_WR_DDR5,
  HPCB_ID_CBS_CMN_MEM_CTRLLER_RTT_PARK_DDR5,
  HPCB_ID_CBS_CMN_MEM_TIMING_TCKE_DDR5,
  HPCB_ID_CBS_CMN_MEM_CTRLLER_DATA_SCRAMBLE_DDR5
} HPCB_COMMON_CBS_EXT_ID;

typedef struct _TOKEN_PAIR {
  UINT16    HpcbCommonId;
  UINT16    HpcbToken;
} TOKEN_PAIR;

//
// DDR Post Package Repair
//
#define DPPR_SOFT_REPAIR     0
#define DPPR_HARD_REPAIR     1
#define DPPR_VALID_REPAIR    1
#define DPPR_INVALID_REPAIR  0

#define DRAM_POST_PKG_SOFT_REPAIR     0
#define DRAM_POST_PKG_HARD_REPAIR     1
#define DRAM_POST_PKG_VALID_REPAIR    1
#define DRAM_POST_PKG_INVALID_REPAIR  0

typedef struct _DRRP_REPAIR_ENTRY {
  UINT32    Bank           : 5;            ///< [4:0] Bank {BG 3:2,BA 1:0}
  UINT32    RankMultiplier : 3;            ///< [7:5] Rank Multiplier
  UINT32    Device         : 5;            ///< [12:8] Device width
                                           ///< Device = 4, Repair DIMMs with device width x4 only
                                           ///< Device = 8, Repair DIMMs with device width x8 only
                                           ///< Device = 16, Repair DIMMs with device width x16 only
                                           ///< Device = 0x1F - Ignore device width and repair specific devices based on TargetDevice
  UINT32    ChipSelect     : 2;            ///< [14:13] ChipSelect
  UINT32    Column         : 10;           ///< [24:15] Column Address
  UINT32    RepairType     : 1;            ///< [25:25] Hard/soft repair (0=hard, 1=soft)
  UINT32    Valid          : 1;            ///< [26:26] Valid entry
  UINT32    TargetDevice   : 5;            ///< [31:27] Target Device (only valid if Device = 0x1F)
                                           ///< x4 (0-17 (with ECC)), x8 (0-8 (with ECC))
  UINT32    Row            : 18;           ///< [18:0] Row Address
  UINT32    Socket         : 3;            ///< [21:19] Socket
  UINT32    Channel        : 3;            ///< [21:19] Channel
  UINT32    Reserverd1     : 8;            ///< pad to 32 bit
} DRRP_REPAIR_ENTRY;

#endif //_HPCB_COMMON_H_
